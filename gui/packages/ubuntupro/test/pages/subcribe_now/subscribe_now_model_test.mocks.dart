// Mocks generated by Mockito 5.4.4 from annotations
// in ubuntupro/test/pages/subcribe_now/subscribe_now_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:agentapi/agentapi.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:ubuntupro/core/agent_api_client.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSubscriptionInfo_0 extends _i1.SmartFake
    implements _i2.SubscriptionInfo {
  _FakeSubscriptionInfo_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AgentApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockAgentApiClient extends _i1.Mock implements _i3.AgentApiClient {
  MockAgentApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.SubscriptionInfo> applyProToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #applyProToken,
          [token],
        ),
        returnValue:
            _i4.Future<_i2.SubscriptionInfo>.value(_FakeSubscriptionInfo_0(
          this,
          Invocation.method(
            #applyProToken,
            [token],
          ),
        )),
      ) as _i4.Future<_i2.SubscriptionInfo>);

  @override
  _i4.Future<bool> ping() => (super.noSuchMethod(
        Invocation.method(
          #ping,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<_i2.SubscriptionInfo> subscriptionInfo() => (super.noSuchMethod(
        Invocation.method(
          #subscriptionInfo,
          [],
        ),
        returnValue:
            _i4.Future<_i2.SubscriptionInfo>.value(_FakeSubscriptionInfo_0(
          this,
          Invocation.method(
            #subscriptionInfo,
            [],
          ),
        )),
      ) as _i4.Future<_i2.SubscriptionInfo>);

  @override
  _i4.Future<_i2.SubscriptionInfo> notifyPurchase() => (super.noSuchMethod(
        Invocation.method(
          #notifyPurchase,
          [],
        ),
        returnValue:
            _i4.Future<_i2.SubscriptionInfo>.value(_FakeSubscriptionInfo_0(
          this,
          Invocation.method(
            #notifyPurchase,
            [],
          ),
        )),
      ) as _i4.Future<_i2.SubscriptionInfo>);
}
