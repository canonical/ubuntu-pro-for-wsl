name: QA

on:
  pull_request:
    paths-ignore:
      - docs/**
      - msix/**
      - '*.md'
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: QA-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  quality-go:
    name: "Go Quality checks"
    permissions: {}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
        subproject: [
            "agentapi",
          ]
        exclude:
          - os: windows
            subproject: wsl-pro-service
          - os: ubuntu
            subproject: end-to-end
        include:
          - subproject: agentapi
            needs-flutter: true

    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Read flutter version
        if: matrix.needs-flutter != ''
        id: flutter-version
        uses: ./.github/actions/read-file
        with:
          path: tools/flutter-version
      - name: Set up flutter
        uses: subosito/flutter-action@v2
        if: matrix.needs-flutter != ''
        with:
          channel: 'stable'
          flutter-version: ${{ steps.flutter-version.outputs.contents }}
      - name: Install Dart protoc plugin
        if: matrix.needs-flutter != ''
        shell: bash
        working-directory: ${{ matrix.subproject }}
        run: |
          dart pub global activate protoc_plugin
      - name: Quality check
        uses: canonical/desktop-engineering/gh-actions/go/code-sanity@force-go-toolchain-version
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: ${{ matrix.subproject }}
          go-tags: gowslmock
          tools-directory: ${{ github.workspace }}/tools
          golangci-lint-configfile: ${{ github.workspace }}/.golangci.yaml