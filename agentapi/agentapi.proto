syntax = "proto3";

option go_package = "github.com/canonical/ubuntu-pro-for-wsl/agentapi";

package agentapi;

message Empty {}

service UI {
    rpc ApplyProToken (ProAttachInfo) returns (Empty) {}
    rpc ApplyLandscapeConfig(LandscapeConfig) returns (Empty) {}
    rpc Ping (Empty) returns (Empty) {}
    rpc GetConfigSources(Empty) returns (stream ConfigSources) {}
    rpc NotifyPurchase(Empty) returns (Empty) {}
}

message ProAttachInfo {
    string token = 1;
}

message LandscapeConfig {
    string config = 1;
}

message SubscriptionInfo {
    string productId = 1;           // The ID of the Ubuntu Pro for WSL product on the Microsoft Store.

    oneof subscriptionType {
        Empty none = 2;             // There is no active subscription.
        Empty user = 3;             // The subscription is managed by the user with a pro token from the GUI or the registry.
        Empty organization = 4;     // The subscription is managed by the sysadmin with a pro token from the registry.
        Empty microsoftStore = 5;   // The subscription is managed via the Microsoft store.
    };
}

message LandscapeSource {
    oneof landscapeSourceType {
        Empty none = 1;             // There is no active Landscape config data.
        Empty user = 2;             // The Landscape config is managed by the user, set via the GUI.
        Empty organization = 3;     // The Landscape config is managedby the sysadmin, set via the registry.
    };
}

message ConfigSources {
    SubscriptionInfo proSubscription = 1;
    LandscapeSource landscapeSource = 2;
}

service WSLInstance {
    rpc Connected(stream DistroInfo) returns (Empty) {}

    // Reverse unary calls
    rpc ProAttachmentCommands(stream MSG) returns (stream ProAttachCmd) {}
    rpc LandscapeConfigCommands(stream MSG) returns (stream LandscapeConfigCmd) {}
}

message DistroInfo {
    string wsl_name = 1;
    string id = 2;
    string version_id = 3;
    string pretty_name = 4;
    bool pro_attached = 5;
    string hostname = 6;
}

message ProAttachCmd {
    string token = 1;
}

message LandscapeConfigCmd {
    string config = 1;
    string hostagent_uid = 2;
}

message MSG {
    oneof data {
        string wsl_name = 1;    // Used during handshake to identify the WSL instance.
        string result = 2;      // Used in response to a command
    }
}
